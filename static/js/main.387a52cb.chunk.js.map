{"version":3,"sources":["namespaces.js","ListBox.js","Select.js","TreeKeyboardDelegate.js","Tree.js","App.js","index.js"],"names":["namespaces","namespace","type","cluster","ListBase","styled","ul","p","maxHeight","ListBox","props","ref","useRef","listBoxRef","state","style","listBoxProps","useListBox","collection","map","item","key","OptionBase","li","Option","useOption","optionProps","isSelected","isFocused","isDisabled","rendered","PopopverBody","div","Popover","forwardRef","title","children","isOpen","onClose","otherProps","overlayProps","useOverlay","isDismissable","shouldCloseOnBlur","modalProps","useModal","restoreFocus","mergeProps","onDismiss","Select","useSelectState","triggerRef","overlayRef","useSelect","labelProps","triggerProps","valueProps","menuProps","buttonProps","useButton","useOverlayPosition","targetRef","placement","offset","label","name","selectedItem","close","TreeKeyboardDelegate","disabledKeys","this","getItem","has","keyBefore","getKeyBefore","_isKeySelectable","keyBelow","getKeyAfter","getFirstKey","getLastKey","Tree","useTreeState","console","log","keyboardDelegate","useMemo","collectionProps","useSelectableCollection","selectionManager","role","TreeNodes","nodes","Array","from","node","TreeItem","TreeItemBase","TreeItemGroup","TreeItemExpander","TreeItemLabel","itemProps","useSelectableItem","pressProps","usePress","onPress","toggleKey","isExpanded","hasChildNodes","expandedKeys","level","childNodes","items","App","className","marginLeft","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.387a52cb.chunk.js","sourcesContent":["export const namespaces = [\n  {\n    namespace: \"aldoshin\",\n    type: \"dynamic\",\n    cluster: \"dev1.cluster.robo.arrival.co\"\n  },\n  {\n    namespace: \"andreeva\",\n    type: \"dynamic\",\n    cluster: \"dev1.cluster.robo.arrival.co\"\n  },\n  { namespace: \"auth\", cluster: \"dev1.cluster.robo.arrival.co\" },\n  { namespace: \"clickhouse\", cluster: \"dev1.cluster.robo.arrival.co\" },\n  { namespace: \"default\", cluster: \"dev1.cluster.robo.arrival.co\" },\n  {\n    namespace: \"dockerfile-operator-system\",\n    cluster: \"dev1.cluster.robo.arrival.co\"\n  },\n  {\n    namespace: \"gpu-operator-resources\",\n    cluster: \"dev1.cluster.robo.arrival.co\"\n  },\n  { namespace: \"kalinina\", cluster: \"dev1.cluster.robo.arrival.co\" },\n  {\n    namespace: \"khabaev\",\n    type: \"dynamic\",\n    cluster: \"dev1.cluster.robo.arrival.co\"\n  },\n  { namespace: \"kube-node-lease\", cluster: \"dev1.cluster.robo.arrival.co\" },\n  { namespace: \"kube-public\", cluster: \"dev1.cluster.robo.arrival.co\" },\n  { namespace: \"kube-system\", cluster: \"dev1.cluster.robo.arrival.co\" },\n  { namespace: \"logging\", cluster: \"dev1.cluster.robo.arrival.co\" },\n  { namespace: \"monitoring\", cluster: \"dev1.cluster.robo.arrival.co\" },\n  {\n    namespace: \"muryna\",\n    type: \"dynamic\",\n    cluster: \"dev1.cluster.robo.arrival.co\"\n  },\n  { namespace: \"nexus\", cluster: \"dev1.cluster.robo.arrival.co\" },\n  {\n    namespace: \"pogodin\",\n    type: \"dynamic\",\n    cluster: \"dev1.cluster.robo.arrival.co\"\n  },\n  {\n    namespace: \"pominov\",\n    type: \"dynamic\",\n    cluster: \"dev1.cluster.robo.arrival.co\"\n  },\n  { namespace: \"security\", cluster: \"dev1.cluster.robo.arrival.co\" },\n  { namespace: \"smirnov\", cluster: \"dev1.cluster.robo.arrival.co\" },\n  {\n    namespace: \"vendidandi\",\n    type: \"dynamic\",\n    cluster: \"dev1.cluster.robo.arrival.co\"\n  },\n  { namespace: \"zoons\", cluster: \"dev1.cluster.robo.arrival.co\" }\n];\n","import { useRef } from \"react\";\nimport { useListBox, useOption } from \"react-aria\";\nimport styled from \"@emotion/styled\";\n\nconst ListBase = styled.ul`\n  margin: 0;\n  padding: 0;\n  list-style: none;\n  max-height: ${(p) => p.maxHeight}px;\n  overflow: auto;\n`;\n\nexport function ListBox(props) {\n  const ref = useRef();\n  const { listBoxRef = ref, state, style } = props;\n  const { listBoxProps } = useListBox(props, state, listBoxRef);\n\n  return (\n    <ListBase {...listBoxProps} maxHeight={style.maxHeight} ref={listBoxRef}>\n      {[...state.collection].map((item) => (\n        <Option key={item.key} item={item} state={state} />\n      ))}\n    </ListBase>\n  );\n}\n\nconst OptionBase = styled.li`\n  font-size: 16px;\n  padding: 16px 16px;\n`;\n\nconst Option = ({ item, state }) => {\n  const ref = useRef();\n  const { optionProps, isSelected, isFocused, isDisabled } = useOption(\n    { key: item.key },\n    state,\n    ref\n  );\n\n  return (\n    <OptionBase\n      {...optionProps}\n      ref={ref}\n      isSelected={isSelected}\n      isFocused={isFocused}\n      isDisabled={isDisabled}\n    >\n      {item.rendered}\n    </OptionBase>\n  );\n};\n","import { forwardRef, useMemo, useRef } from \"react\";\nimport styled from \"@emotion/styled\";\nimport {\n  useSelect,\n  HiddenSelect,\n  useButton,\n  useOverlay,\n  useOverlayPosition,\n  useModal,\n  OverlayContainer,\n  DismissButton,\n  FocusScope,\n  mergeProps\n} from \"react-aria\";\nimport { useSelectState } from \"react-stately\";\nimport { ListBox } from \"./ListBox\";\n\nconst PopopverBody = styled.div`\n  background-color: #eee;\n  /* position: absolute; */\n`;\n\nexport const Popover = forwardRef(function Popopver(props, ref) {\n  const { title, children, isOpen, onClose, style, ...otherProps } = props;\n\n  const { overlayProps } = useOverlay(\n    { onClose, isOpen, isDismissable: true, shouldCloseOnBlur: false },\n    ref\n  );\n  const { modalProps } = useModal();\n\n  return (\n    <FocusScope restoreFocus>\n      <PopopverBody\n        {...mergeProps(overlayProps, modalProps, otherProps)}\n        style={style}\n        ref={ref}\n      >\n        {children}\n        <DismissButton onDismiss={onClose} />\n      </PopopverBody>\n    </FocusScope>\n  );\n});\n\nexport function Select(props) {\n  const state = useSelectState(props);\n\n  const triggerRef = useRef(null);\n  const overlayRef = useRef();\n\n  const { labelProps, triggerProps, valueProps, menuProps } = useSelect(\n    props,\n    state,\n    triggerRef\n  );\n\n  const { buttonProps } = useButton(triggerProps, triggerRef);\n  const { overlayProps } = useOverlayPosition({\n    targetRef: triggerRef,\n    overlayRef,\n    placement: \"bottom left\",\n    offset: 0,\n    isOpen: state.isOpen\n  });\n\n  return (\n    <div>\n      <div {...labelProps}>{props.label}</div>\n      <HiddenSelect\n        state={state}\n        triggerRef={triggerRef}\n        label={props.label}\n        name={props.name}\n      />\n      <button {...buttonProps} ref={triggerRef}>\n        <span {...valueProps}>\n          {state.selectedItem\n            ? state.selectedItem.rendered\n            : \"Select an option\"}\n        </span>\n      </button>\n\n      {state.isOpen && (\n        <OverlayContainer>\n          <Popover\n            {...overlayProps}\n            ref={overlayRef}\n            isOpen={state.isOpen}\n            onClose={state.close}\n          >\n            <ListBox state={state} {...menuProps} {...overlayProps} />\n          </Popover>\n        </OverlayContainer>\n      )}\n    </div>\n  );\n}\n","export class TreeKeyboardDelegate {\n  constructor(collection, disabledKeys) {\n    this.collection = collection;\n    this.disabledKeys = disabledKeys;\n  }\n\n  _isKeySelectable(key) {\n    const item = this.collection.getItem(key);\n\n    return item?.type === \"item\" && !this.disabledKeys.has(item.key);\n  }\n\n  getKeyAbove(key) {\n    const { collection } = this;\n    let keyBefore = collection.getKeyBefore(key);\n\n    while (keyBefore !== null) {\n      if (this._isKeySelectable(keyBefore)) {\n        return keyBefore;\n      }\n\n      keyBefore = collection.getKeyBefore(keyBefore);\n    }\n\n    return null;\n  }\n\n  getKeyBelow(key) {\n    const { collection } = this;\n    let keyBelow = collection.getKeyAfter(key);\n\n    while (keyBelow !== null) {\n      if (this._isKeySelectable(keyBelow)) {\n        return keyBelow;\n      }\n\n      keyBelow = collection.getKeyAfter(keyBelow);\n    }\n\n    return null;\n  }\n\n  getFirstKey() {\n    const { collection } = this;\n\n    let key = collection.getFirstKey();\n\n    while (key !== null) {\n      if (this._isKeySelectable(key)) {\n        return key;\n      }\n\n      key = collection.getKeyAfter(key);\n    }\n\n    return null;\n  }\n\n  getLastKey() {\n    const { collection } = this;\n\n    let key = collection.getLastKey();\n\n    while (key !== null) {\n      if (this._isKeySelectable(key)) {\n        return key;\n      }\n\n      key = collection.getKeyBefore(key);\n    }\n\n    return null;\n  }\n\n  getKeyForSearch() {\n    return null;\n  }\n}\n","import { useMemo, useRef } from \"react\";\nimport { usePress } from \"react-aria\";\nimport {\n  useSelectableCollection,\n  useSelectableItem\n} from \"@react-aria/selection\";\nimport { useTreeState, Item } from \"react-stately\";\nimport { TreeKeyboardDelegate } from \"./TreeKeyboardDelegate\";\n\nimport styled from \"@emotion/styled\";\n\nexport function Tree(props) {\n  const state = useTreeState(props);\n  const ref = useRef();\n\n  console.log(\"state:\", state);\n\n  const keyboardDelegate = useMemo(\n    () => new TreeKeyboardDelegate(state.collection, state.disabledKeys),\n    [state.collection, state.disabledKeys]\n  );\n\n  const { collectionProps } = useSelectableCollection({\n    keyboardDelegate,\n    ref,\n    selectionManager: state.selectionManager\n  });\n\n  return (\n    <div {...collectionProps} ref={ref} role=\"tree\">\n      {TreeNodes({ nodes: state.collection, state })}\n    </div>\n  );\n}\n\nfunction TreeNodes({ nodes, state }) {\n  return Array.from(nodes).map((node) => (\n    <TreeItem key={node.key} node={node} state={state} />\n  ));\n}\n\nconst TreeItemBase = styled.div`\n  padding: 4px 0;\n`;\n\nconst TreeItemGroup = styled.div`\n  padding-left: 16px;\n  position: relative;\n\n  border-left: 1px dashed black;\n  margin-left: 8px;\n`;\n\nconst TreeItemExpander = styled.div`\n  width: 16px;\n  height: 16px;\n  border: 1px solid;\n  position: relative;\n  margin-right: 8px;\n`;\n\nconst TreeItemLabel = styled.div`\n  display: flex;\n  padding: 4px 0;\n`;\n\nfunction TreeItem({ node, state }) {\n  const ref = useRef();\n  const { itemProps } = useSelectableItem({\n    key: node.key,\n    selectionManager: state.selectionManager,\n    ref\n  });\n\n  const { pressProps } = usePress({\n    ...itemProps,\n    onPress: () => {\n      state.toggleKey(node.key);\n    }\n  });\n\n  const isExpanded = node.hasChildNodes && state.expandedKeys.has(node.key);\n  const isSelected = state.selectionManager.isSelected(node.key);\n\n  return (\n    <TreeItemBase\n      {...pressProps}\n      aria-expanded={node.hasChildNodes ? isExpanded : null}\n      aria-selected={isSelected}\n      ref={ref}\n      role=\"treeitem\"\n    >\n      <TreeItemLabel>\n        {node.hasChildNodes && <TreeItemExpander isExpanded={isExpanded} />}\n        {node.rendered} ({node.level})\n      </TreeItemLabel>\n      {isExpanded && (\n        <TreeItemGroup role=\"group\">\n          {TreeNodes({ nodes: node.childNodes, state })}\n        </TreeItemGroup>\n      )}\n    </TreeItemBase>\n  );\n}\n","import { OverlayProvider } from \"react-aria\";\nimport { Item } from \"react-stately\";\nimport { namespaces } from \"./namespaces\";\nimport \"./styles.css\";\n\nimport { Select } from \"./Select\";\nimport { Tree } from \"./Tree\";\n\nconst items = [\"One\", \"Two\", \"Three\", \"Four\"];\n\nexport default function App() {\n  return (\n    <OverlayProvider>\n      <div className=\"App\">\n        <div style={{ marginLeft: 100 }}>\n          <Select label=\"select 1\" items={items}>\n            {namespaces.map((item) => (\n              <Item key={item.namespace}>{item.namespace}</Item>\n            ))}\n          </Select>\n        </div>\n        <div style={{ marginLeft: 20 }}>\n          <Tree>\n            <Item title=\"Item 1\">\n              <Item title=\"Item 1.1\">\n                <Item>Item 1.1.1</Item>\n                <Item>Item 1.1.2</Item>\n                <Item>Item 1.1.3</Item>\n              </Item>\n            </Item>\n            <Item title=\"Item 2\">\n              <Item title=\"Item 2.1\">\n                <Item>Item 2.1.1</Item>\n                <Item>Item 2.1.2</Item>\n                <Item>Item 2.1.3</Item>\n              </Item>\n              <Item title=\"Item 2.2\">\n                <Item>Item 2.2.1</Item>\n                <Item>Item 2.2.2</Item>\n                <Item>Item 2.2.3</Item>\n              </Item>\n            </Item>\n          </Tree>\n        </div>\n      </div>\n    </OverlayProvider>\n  );\n}\n","import ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}